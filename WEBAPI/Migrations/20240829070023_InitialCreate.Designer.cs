// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WEBAPI.Data;

#nullable disable

namespace WEBAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240829070023_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WEBAPI.Models.Entry", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("date_entry")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("definition")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("kod")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("tag_id")
                        .HasColumnType("integer");

                    b.Property<int>("user_id")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("Entries");
                });

            modelBuilder.Entity("WEBAPI.Models.FileUpload", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.HasKey("id");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("WEBAPI.Models.Followers", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("followed_id")
                        .HasColumnType("integer");

                    b.Property<int>("follower_id")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("Followers");
                });

            modelBuilder.Entity("WEBAPI.Models.Likes", b =>
                {
                    b.Property<int>("like_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("like_id"));

                    b.Property<int>("entry_id")
                        .HasColumnType("integer");

                    b.Property<int>("user_id")
                        .HasColumnType("integer");

                    b.HasKey("like_id");

                    b.ToTable("Likes");
                });

            modelBuilder.Entity("WEBAPI.Models.Msg", b =>
                {
                    b.Property<int>("msg_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("msg_id"));

                    b.Property<bool>("isOpened")
                        .HasColumnType("boolean");

                    b.Property<string>("msg_date")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("msg_detail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("msg_receiver_id")
                        .HasColumnType("integer");

                    b.Property<int>("msg_sender_id")
                        .HasColumnType("integer");

                    b.HasKey("msg_id");

                    b.ToTable("Msg");
                });

            modelBuilder.Entity("WEBAPI.Models.Tag", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("datetime")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("definition")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("user_id")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("WEBAPI.Models.Users", b =>
                {
                    b.Property<int>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("user_id"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("isActive")
                        .HasColumnType("boolean");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("passwordhash")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<byte[]>("passwordsalt")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("register_date")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("user_id");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
